//-------------- pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D --------------//
module pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D
sig pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D extends java_lang_Object {}
{}
field pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header:(pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D)->one(null+pldi_nodecachinglinkedlist_LinkedListNode) {}
field pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_firstCachedNode:(pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D)->one(null+pldi_nodecachinglinkedlist_LinkedListNode) {}
field pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_maximumCacheSize:(pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D)->one(Int) {}
field pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_cacheSize:(pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D)->one(Int) {}
field pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_size:(pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D)->one(Int) {}
field pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_DEFAULT_MAXIMUM_CACHE_SIZE:(pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D)->one(Int) {}
field pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_modCount:(pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D)->one(Int) {}

object_invariant
   all m:null+pldi_nodecachinglinkedlist_LinkedListNode | {
     liftExpression[fun_set_contains[fun_reach[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_firstCachedNode,pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next],m]]
     implies 
             (
               equ[fun_set_contains[fun_reach[m.pldi_nodecachinglinkedlist_LinkedListNode_next,pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next],m],
                  false]
               and 
               equ[m.pldi_nodecachinglinkedlist_LinkedListNode_previous,
                  null]
             )
   
   }

object_invariant
   equ[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_DEFAULT_MAXIMUM_CACHE_SIZE,
      3]

object_invariant
   lte[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_cacheSize,
      thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_maximumCacheSize]

object_invariant
   neq[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_firstCachedNode,
      null]
   implies 
           equ[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_cacheSize,
              fun_set_size[fun_reach[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_firstCachedNode,pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next]]]

object_invariant
   neq[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header,
      null]
   and 
   neq[(thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header).pldi_nodecachinglinkedlist_LinkedListNode_next,
      null]
   and 
   neq[(thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header).pldi_nodecachinglinkedlist_LinkedListNode_previous,
      null]
   and 
   (
     all n:null+pldi_nodecachinglinkedlist_LinkedListNode | {
       liftExpression[fun_set_contains[fun_reach[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header,pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next],n]]
       implies 
               (
                 neq[n.pldi_nodecachinglinkedlist_LinkedListNode_previous,
                    null]
                 and 
                 equ[(n.pldi_nodecachinglinkedlist_LinkedListNode_previous).pldi_nodecachinglinkedlist_LinkedListNode_next,
                    n]
                 and 
                 neq[n.pldi_nodecachinglinkedlist_LinkedListNode_next,
                    null]
                 and 
                 equ[(n.pldi_nodecachinglinkedlist_LinkedListNode_next).pldi_nodecachinglinkedlist_LinkedListNode_previous,
                    n]
               )
     
     }
   )
   and 
   equ[add[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_size,1],
      fun_set_size[fun_reach[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header,pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next]]]
   and 
   gte[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_size,
      0]



program pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D::Constructor[
  var thiz:pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header:=((null+pldi_nodecachinglinkedlist_LinkedListNode) & (null));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_firstCachedNode:=((null+pldi_nodecachinglinkedlist_LinkedListNode) & (null));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_maximumCacheSize:=0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_cacheSize:=0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_size:=0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_DEFAULT_MAXIMUM_CACHE_SIZE:=0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_modCount:=0;
               };
            } else {
               skip;
            };
            var t_1:null+pldi_nodecachinglinkedlist_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  createObject<pldi_nodecachinglinkedlist_LinkedListNode>[t_1];
                  if isEmptyOrNull[t_1]{
                     throw:=java_lang_NullPointerExceptionLit;
                  } else {
                     call Constructor[t_1,throw];
                  };
               
               }
             else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header:=t_1;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]
               or 
               isEmptyOrNull[thiz]
               
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  (thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header).pldi_nodecachinglinkedlist_LinkedListNode_next:=thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]
               or 
               isEmptyOrNull[thiz]
               
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  (thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header).pldi_nodecachinglinkedlist_LinkedListNode_previous:=thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_firstCachedNode:=((null+pldi_nodecachinglinkedlist_LinkedListNode) & (null));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_size:=0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_cacheSize:=0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_DEFAULT_MAXIMUM_CACHE_SIZE:=3;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_maximumCacheSize:=3;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_modCount:=0;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D::contains[
  var thiz:pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D,
  var throw:java_lang_Throwable+null,
  var return:boolean,
  var arg:java_lang_Object+null] 
Specification 
{
  SpecCase #0 {
   requires {
      true=true
   }
   
   ensures {
      instanceOf[throw',
                java_lang_Exception]
      implies 
              liftExpression[false]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_modCount',
                 thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_modCount]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_DEFAULT_MAXIMUM_CACHE_SIZE',
                 thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_DEFAULT_MAXIMUM_CACHE_SIZE]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_size',
                 thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_size]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_cacheSize',
                 thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_cacheSize]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_maximumCacheSize',
                 thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_maximumCacheSize]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_firstCachedNode',
                 thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_firstCachedNode]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              equ[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header',
                 thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                all n:null+pldi_nodecachinglinkedlist_LinkedListNode | {
                  liftExpression[fun_set_contains[fun_reach[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header',pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next'],n]]
                  implies 
                          liftExpression[fun_set_contains[fun_reach[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header,pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next],n]]
                
                }
              )
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                all n:null+pldi_nodecachinglinkedlist_LinkedListNode | {
                  liftExpression[fun_set_contains[fun_reach[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header,pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next],n]]
                  implies 
                          liftExpression[fun_set_contains[fun_reach[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header',pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next'],n]]
                
                }
              )
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                all n:null+pldi_nodecachinglinkedlist_LinkedListNode | {
                  liftExpression[fun_set_contains[fun_reach[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header,pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next],n]]
                  implies 
                          (
                            equ[n.pldi_nodecachinglinkedlist_LinkedListNode_next',
                               n.pldi_nodecachinglinkedlist_LinkedListNode_next]
                            and 
                            equ[n.pldi_nodecachinglinkedlist_LinkedListNode_previous',
                               n.pldi_nodecachinglinkedlist_LinkedListNode_previous]
                            and 
                            equ[n.pldi_nodecachinglinkedlist_LinkedListNode_value',
                               n.pldi_nodecachinglinkedlist_LinkedListNode_value]
                          )
                
                }
              )
   }
   
   ensures {
      (
        throw'=null)
      implies 
              (
                (
                  equ[return',
                     true]
                  implies 
                          (
                            some n:null+pldi_nodecachinglinkedlist_LinkedListNode | {
                              (
                                fun_set_contains[fun_reach[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header',pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next'],n]=true)
                              and 
                              neq[n,
                                 thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header']
                              and 
                              equ[n.pldi_nodecachinglinkedlist_LinkedListNode_value',
                                 arg']
                            
                            }
                          )
                )
                and 
                (
                  (
                    some n:null+pldi_nodecachinglinkedlist_LinkedListNode | {
                      (
                        fun_set_contains[fun_reach[thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header',pldi_nodecachinglinkedlist_LinkedListNode,pldi_nodecachinglinkedlist_LinkedListNode_next'],n]=true)
                      and 
                      neq[n,
                         thiz'.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header']
                      and 
                      equ[n.pldi_nodecachinglinkedlist_LinkedListNode_value',
                         arg']
                    
                    }
                  )
                  implies 
                          equ[return',
                             true]
                )
              )
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var param_arg_0:java_lang_Object+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               param_arg_0:=arg;
            } else {
               skip;
            };
            var var_1_node:null+pldi_nodecachinglinkedlist_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_1_node:=(thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header).pldi_nodecachinglinkedlist_LinkedListNode_next;
               };
            } else {
               skip;
            };
            var var_2_node2:null+pldi_nodecachinglinkedlist_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_2_node2:=var_1_node;
            } else {
               skip;
            };
            var var_3_remaining:Int;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_3_remaining:=0;
            } else {
               skip;
            };
            var var_4_ws_1:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_4_ws_1:=(neq[var_2_node2,
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_4_ws_1]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_3_remaining:=add[var_3_remaining,1];
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_2_node2]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        var_2_node2:=var_2_node2.pldi_nodecachinglinkedlist_LinkedListNode_next;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_4_ws_1:=(neq[var_2_node2,
                        thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            var var_5_ws_3:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_5_ws_3:=(equ[var_1_node,
                  thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_5_ws_3]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var variant_0:Int;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     variant_0:=var_3_remaining;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if lt[var_3_remaining,
                       0]   {
                           createObject<java_lang_Object>[throw];
                           if isEmptyOrNull[throw]{
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              call Constructor[throw,throw];
                           };
                        
                        }
                      else {
                        skip;
                     };
                  } else {
                     skip;
                  };
                  var t_2:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_2:=(neq[var_1_node.pldi_nodecachinglinkedlist_LinkedListNode_value,
                        arg]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_2=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false)   {
                              return:=true;
                              exit_stmt_reached:=true;
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_1_node.pldi_nodecachinglinkedlist_LinkedListNode_next]
                     or 
                     isEmptyOrNull[var_1_node]
                     {
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        var_1_node:=(var_1_node.pldi_nodecachinglinkedlist_LinkedListNode_next).pldi_nodecachinglinkedlist_LinkedListNode_next;
                     };
                  } else {
                     skip;
                  };
                  var var_6_remaining2:Int;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_6_remaining2:=0;
                  } else {
                     skip;
                  };
                  var var_7_node3:null+pldi_nodecachinglinkedlist_LinkedListNode;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_7_node3:=var_1_node;
                  } else {
                     skip;
                  };
                  var var_8_ws_2:boolean;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_8_ws_2:=(neq[var_7_node3,
                        thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]=>(true)else(false));
                  } else {
                     skip;
                  };
                  while liftExpression[var_8_ws_2]
                  and 
                  (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false)
                  
                     {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           var_6_remaining2:=add[var_6_remaining2,1];
                        } else {
                           skip;
                        };
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           if isEmptyOrNull[var_7_node3]{
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              var_7_node3:=var_7_node3.pldi_nodecachinglinkedlist_LinkedListNode_next;
                           };
                        } else {
                           skip;
                        };
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           var_8_ws_2:=(neq[var_7_node3,
                              thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]=>(true)else(false));
                        } else {
                           skip;
                        };
                     
                     }
                  ;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_3_remaining:=var_6_remaining2;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_5_ws_3:=(equ[var_1_node,
                        thiz.pldi_nodecachinglinkedlist_NodeCachingLinkedListContainsBug3x2x6D_header]=>(true)else(false));
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if gte[var_3_remaining,
                        variant_0]   {
                           createObject<java_lang_Object>[throw];
                           if isEmptyOrNull[throw]{
                              throw:=java_lang_NullPointerExceptionLit;
                           } else {
                              call Constructor[throw,throw];
                           };
                        
                        }
                      else {
                        skip;
                     };
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=false;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }



